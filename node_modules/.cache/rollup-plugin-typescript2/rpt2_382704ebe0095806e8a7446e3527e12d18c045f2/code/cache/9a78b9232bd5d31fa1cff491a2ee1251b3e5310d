{"code":"function patchStyle(el, prev, next) {\r\n    // 如果原生next属性没有值\r\n    var style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else {\r\n        for (var key in next) { // 新的全量覆盖老的\r\n            style[key] = next[key];\r\n        }\r\n        if (prev) { // 老的有，新的没，移除\r\n            for (var key in prev) {\r\n                if (!next[key]) {\r\n                    style[key] = '';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchClass(el, next) {\r\n    if (next == null) {\r\n        next = '';\r\n    }\r\n    el.className = next;\r\n}\r\nfunction patchAttr(el, key, next) {\r\n    if (next == null) {\r\n        el.removeAttribute(key);\r\n    }\r\n    el.setAttribute(key, next);\r\n}\r\nexport function patchProp(el, key, prevValue, nextValue) {\r\n    switch (key) {\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        case 'class':\r\n            patchClass(el, nextValue);\r\n            break;\r\n        default:\r\n            patchAttr(el, key, nextValue);\r\n    }\r\n}\r\n","references":[]}
