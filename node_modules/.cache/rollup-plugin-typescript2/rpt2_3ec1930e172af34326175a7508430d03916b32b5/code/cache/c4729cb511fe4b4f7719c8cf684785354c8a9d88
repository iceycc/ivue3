{"code":"import { track, trigger } from \"./effect\";\r\nimport { hasChange, hasOwn, isArray, isObject } from \"@iVue/shared\";\r\nimport { reactive } from \"./reactive\";\r\n// proxy 和 reflect 连用 （reflect 以后会取代掉 object上一系列法 ）\r\nexport var mutableHandlers = {\r\n    // 目标原对象 属性 代理后的对象\r\n    get: function (target, key, receiver) {\r\n        // / 需要让传递来的fn 变成响应式的effect，数据有变化 这个fn就能重新执行\r\n        //  当取值的时候 应该将effect 存储起来 依赖收集\r\n        var result = Reflect.get(target, key, receiver);\r\n        // if (typeof key == 'symbol') {\r\n        //     return result // 源码中是不会对内置的symbol进行依赖收集\r\n        // }\r\n        track(target, key);\r\n        if (result.__v_isRef) { // 如果是ref\r\n            // 加ref包裹的或者计算属性\r\n            return result.value;\r\n        }\r\n        return isObject(result) ? reactive(result) : result;\r\n    },\r\n    set: function (target, key, value, receiver) {\r\n        // 当设置值的时候 应该通知对应的effect来更新\r\n        // 设置的时候一般分为两种，一种是添加属性 一种是修改属性.\r\n        // 两种类型：数组、对象\r\n        // 如果是数组 就比较当前新增的属性 是否比长度大，大的话就是以前没有新增的\r\n        // 调用push方法 会先进行添加属性 在去更新长度（这次长度更新是没有意义的）\r\n        var oldValue = target[key]; // 上次结果\r\n        var hasKey = isArray(target) && (parseInt(key, 10) == key) ? (Number(key) < target.length) : hasOwn(target, key);\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        // effectStack.forEach(effect => effect()) //暴力循环通知订阅的effect\r\n        if (!hasKey) {\r\n            // console.log('增加属性', key, value)\r\n            trigger(target, 'add', key, value);\r\n        }\r\n        else if (hasChange(oldValue, value)) {\r\n            // console.log('修改属性', key, value);\r\n            trigger(target, 'set', key, value);\r\n        }\r\n        return result;\r\n    }\r\n};\r\n// 默认加载页面时 会先调用一次effect，此时effect方法中的数据会进行取值操作 -》 get方法\r\n//                让对应的属性保存当前的effect  =>  某个对象中 name属性  对应的effect有几个\r\n// 某个对象中 name属性 变化了 ， 需要找到对应的effect列表让他依次执行\r\n","references":["/Users/bingyang/Documents/festudy/my-vue3/packages/reactivity/src/reactivity/effect.ts","/Users/bingyang/Documents/festudy/my-vue3/packages/shared/src/index.ts","/Users/bingyang/Documents/festudy/my-vue3/packages/reactivity/src/reactivity/reactive.ts"]}
