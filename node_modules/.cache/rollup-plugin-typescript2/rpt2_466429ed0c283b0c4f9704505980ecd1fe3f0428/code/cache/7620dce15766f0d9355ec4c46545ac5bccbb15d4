{"code":"var mutableHandlers = {\r\n    get: function () {\r\n    },\r\n    set: function () {\r\n    }\r\n};\r\nexport var reactive = function (target) {\r\n    console.log(target);\r\n    // 你给我一个对象 我需要让这个对象变成响应式对象\r\n    // 在vue2.0的时候 defineProprety直接循环对象中的每一个属性， 无法对不存在的属性做处理.递归处理多级对象\r\n    // vue3.0 没有循环 对原对象进行代理,vue3不存在的属性也可以监控到,vue3 没有以上来就递归\r\n    return createReactiveObject(target, mutableHandlers); // 高阶函数，可以根据不同的参数实现不同的功能\r\n};\r\nfunction createReactiveObject(target, options) {\r\n    return new Proxy(target, options);\r\n}\r\n","references":[]}
